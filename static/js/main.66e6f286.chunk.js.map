{"version":3,"sources":["components/Paragraph.js","components/AdvanceCard.js","services/BirthdayService.js","pages/Birthplaces.js","components/BasicCard.js","services/LeaderService.js","pages/Leaders.js","components/form/SingleInput.js","components/form/Dropdown.js","components/Title.js","components/ChocoboNew.js","components/ChocoboList.js","pages/Stable.js","components/ContentTable.js","services/TrainingService.js","pages/Training.js","components/Header.js","App.js","registerServiceWorker.js","index.js"],"names":["uuidv1","__webpack_require__","components_Paragraph","props","react_default","a","createElement","Typography_default","component","sentences","map","text","key","components_AdvanceCard","Grid_default","item","xs","Card_default","CardHeader_default","title","subheader","subtitle","CardContent_default","requirement","color","content","BirthdayService","fetchAll","birthplaces","pages_Birthplaces","Birthplaces","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","state","getItems","setState","container","spacing","direction","alignItems","justify","birthplace","id","Component","components_BasicCard","LeaderService","leaders","pages_Leaders","Leaders","Leaders_classCallCheck","Leaders_possibleConstructorReturn","Leaders_getPrototypeOf","leader","contents","form_SingleInput","FormControl_default","margin","InputLabel_default","htmlFor","name","Input_default","onChange","type","inputType","placeholder","value","required","inputProps","aria-label","form_Dropdown","NativeSelect_default","defaultValue","selectedOption","options","opt","components_Title","Toolbar_default","variant","message","components_ChocoboNew","ChocoboNew","ChocoboNew_classCallCheck","ChocoboNew_getPrototypeOf","hp","attack","colour","speed","handleChange","bind","ChocoboNew_assertThisInitialized","handleSubmit","event","target","preventDefault","addNewItem","Paper_default","className","onSubmit","FormGroup_default","row","Button_default","components_ChocoboList","chocobo","parseInt","calcSpeed","Math","round","Table_default","TableHead_default","TableRow_default","header","TableCell_default","TableBody_default","items","calculator","onClick","DeleteItem","Stable_uuidv1","pages_Stable","Stable","Stable_classCallCheck","Stable_possibleConstructorReturn","Stable_getPrototypeOf","payload","Object","idb_keyval","prevState","stable","push","filter","Ids","i","length","components_ContentTable","headers","index","scope","TrainingService","training","pages_Training","Training","Training_classCallCheck","Training_possibleConstructorReturn","Training_getPrototypeOf","train","components_Header","AppBar_default","position","noWrap","NavLink","activeClassName","to","src_App","CssBaseline_default","Route","exact","path","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","react_dom_default","render","BrowserRouter","document","getElementById","URL","origin","addEventListener","fetch","response","status","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.66e6f286.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nconst uuidv1 = require('uuid/v1');\n\nconst Paragraph = props =>\n  <Typography component=\"p\">\n    {props.sentences.map(text =>\n      <span key={uuidv1()}>{text}<br/></span>\n    )}\n  </Typography>;\n\nParagraph.propTypes = {\n  sentences: PropTypes.array.isRequired\n};\n\nexport default Paragraph;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Paragraph from './Paragraph';\n\nconst AdvanceCard = props =>\n  <Grid item xs>\n    <Card>\n      <CardHeader title={props.title} subheader={props.subtitle}/>\n      <CardContent>\n        {props.requirement ? (\n        <Typography color=\"secondary\">\n          Requires: {props.requirement}\n        </Typography> ) : null}\n        <Paragraph sentences={props.content} />\n      </CardContent>\n    </Card>\n  </Grid>;\n\nAdvanceCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  subtitle: PropTypes.string.isRequired,\n  requirement: PropTypes.string,\n  content: PropTypes.array.isRequired\n};\n\nexport default AdvanceCard;\n","import birthplaces from '../data/birthplaces.json';\n\nexport const BirthdayService = {\n    fetchAll\n};\n\nfunction fetchAll() {\n    return birthplaces;\n}\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport AdvanceCard from '../components/AdvanceCard';\nimport {BirthdayService} from '../services/BirthdayService';\n\nclass Birthplaces extends React.Component {\n  constructor() {\n    super();\n    this.state = {birthplaces: []};\n  }\n\n  async getItems() {\n    return {birthplaces: BirthdayService.fetchAll()};\n  }\n\n  async componentDidMount() {\n    this.setState(await this.getItems());\n  }\n\n  render() {\n    return (\n      <main>\n        <Grid\n          container\n          spacing={8}\n          direction=\"column\"\n          alignItems=\"stretch\"\n          justify=\"center\"\n        >\n          {this.state.birthplaces.map(birthplace =>\n            <AdvanceCard\n              key={birthplace.id}\n              title={birthplace.title}\n              subtitle={birthplace.subtitle}\n              requirement={birthplace.requirement}\n              content={birthplace.content}\n            />\n          )}\n        </Grid>\n      </main>\n    );\n  }\n}\n\nexport default Birthplaces;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Paragraph from './Paragraph';\n\nconst BasicCard = props =>\n  <Grid item xs>\n    <Card>\n      <CardHeader title={props.title}/>\n      <CardContent>\n        <Paragraph sentences={props.content} />\n      </CardContent>\n    </Card>\n  </Grid>;\n\nBasicCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  content: PropTypes.array.isRequired\n};\n\nexport default BasicCard;\n","import leaders from '../data/leaders.json';\n\nexport const LeaderService = {\n    fetchAll\n};\n\nfunction fetchAll() {\n    return leaders;\n}\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport BasicCard from '../components/BasicCard';\nimport {LeaderService} from '../services/LeaderService';\n\nclass Leaders extends React.Component {\n  constructor() {\n    super();\n    this.state = {leaders: []};\n  }\n\n  async getItems() {\n    return {leaders: LeaderService.fetchAll()};\n  }\n\n  async componentDidMount() {\n    this.setState(await this.getItems());\n  }\n\n  render() {\n    return (\n      <main>\n        <Grid\n          container\n          spacing={8}\n          direction=\"column\"\n          alignItems=\"stretch\"\n          justify=\"center\"\n        >\n          {this.state.leaders.map(leader =>\n            <BasicCard\n              key={leader.id}\n              title={leader.title}\n              content={leader.contents}\n            />\n          )}\n        </Grid>\n      </main>\n    );\n  }\n}\n\nexport default Leaders;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\n\nconst SingleInput = (props) =>\n  <FormControl margin=\"normal\">\n    <InputLabel htmlFor={props.name}>{props.title}</InputLabel>\n    <Input\n      id={props.name}\n      name={props.name}\n      onChange={props.onChange}\n      type={props.inputType}\n      placeholder={props.placeholder}\n      value={props.content}\n      required={props.required}\n      inputProps={{\n        'aria-label': 'Description',\n      }}\n    />\n  </FormControl>;\n\nSingleInput.propTypes = {\n  inputType: PropTypes.oneOf(['text', 'number']).isRequired,\n  title: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n  content: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ])\n};\n\nexport default SingleInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport NativeSelect from '@material-ui/core/NativeSelect';\n\nconst Dropdown = props =>\n  <FormControl margin=\"normal\" required>\n    <InputLabel htmlFor={props.name}>\n      {props.title}\n    </InputLabel>\n    <NativeSelect\n      name={props.name}\n      onChange={props.onChange}\n      defaultValue={props.selectedOption}>\n      {props.options.map(opt => {\n        return (\n          <option key={opt} value={opt}>{opt}</option>\n        );\n      })}\n    </NativeSelect>\n  </FormControl>;\n\nDropdown.propTypes = {\n  name: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  options: PropTypes.array.isRequired,\n  selectedOption: PropTypes.string\n};\n\nexport default Dropdown;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nconst Title = props =>\n  <Toolbar variant=\"dense\">\n    <Typography variant=\"title\">{props.message}</Typography>\n  </Toolbar>;\n\nTitle.propTypes = {\n  message: PropTypes.string.isRequired\n};\n\nexport default Title;\n","import React from 'react';\nimport SingleInput from './form/SingleInput';\nimport Dropdown from './form/Dropdown';\nimport Paper from '@material-ui/core/Paper';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Title from './Title';\n\nclass ChocoboNew extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hp: '',\n      attack: '',\n      colour: 'Red',\n      speed: 'D'\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({[event.target.name]: event.target.value});\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.addNewItem(\n      this.state.hp,\n      this.state.attack,\n      this.state.colour,\n      this.state.speed,\n    );\n  }\n\n  render() {\n    return (\n      <Grid item xs>\n        <Paper>\n          <Title message=\"Add a new chocobo\"/>\n          <form className=\"new\" onSubmit={this.handleSubmit}>\n            <FormGroup row>\n              <SingleInput\n                inputType={'number'}\n                title={'HP'}\n                name={'hp'}\n                placeholder={'2000'}\n                required={true}\n                onChange={this.handleChange}\n              />\n              <SingleInput\n                inputType={'number'}\n                title={'Attack'}\n                name={'attack'}\n                placeholder={'1000'}\n                required={true}\n                onChange={this.handleChange}\n              />\n            </FormGroup>\n            <FormGroup row>\n              <Dropdown\n                title={'Colour'}\n                name={'colour'}\n                options={['Red', 'Blue', 'Yellow', 'Black', 'Green']}\n                selectedOption={this.state.colour}\n                onChange={this.handleChange}\n              />\n              <Dropdown\n                title={'Speed'}\n                name={'speed'}\n                options={['D', 'C', 'B', 'A', 'A+']}\n                onChange={this.handleChange}\n                selectedOption={this.state.speed}\n              />\n            </FormGroup>\n            <FormGroup row>\n              <Button variant=\"raised\" color=\"primary\" type=\"submit\">\n                Add\n              </Button>\n            </FormGroup>\n          </form>\n        </Paper>\n      </Grid>\n    );\n  }\n}\n\nexport default ChocoboNew;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport Title from './Title';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableBody from '@material-ui/core/TableBody';\nimport Button from '@material-ui/core/Button';\n\nclass ChocoboList extends React.Component {\n\n  calcSpeed(value) {\n    if (value === 'C') {\n      return 110;\n    }\n    else if (value === 'B') {\n      return 120;\n    }\n    else if (value === 'A') {\n      return 130;\n    }\n    else if (value === 'A+') {\n      return 140;\n    }\n    return 100;\n  }\n\n  calculator(chocobo) {\n    const hp = parseInt(chocobo.hp);\n    const attack = parseInt(chocobo.attack);\n    const speed = this.calcSpeed(chocobo.speed)\n    return Math.round((hp / 20) + (attack / 10) + speed);\n  }\n\n  render() {\n    return (\n      <Grid item xs>\n        <Paper>\n          <Title message=\"Stable of Chocobos\"/>\n          <Table>\n            <TableHead>\n              <TableRow>\n              {this.props.header.map(header => {\n                return (\n                  <TableCell key={header}>{header}</TableCell>\n                );\n              })}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {this.props.items.map(opt => {\n                return (\n                  <TableRow key={opt.id}>\n                    <TableCell>{opt.chocobo.hp}</TableCell>\n                    <TableCell>{opt.chocobo.attack}</TableCell>\n                    <TableCell>{opt.chocobo.speed}</TableCell>\n                    <TableCell>{opt.chocobo.colour}</TableCell>\n                    <TableCell>{this.calculator(opt.chocobo)}</TableCell>\n                    <TableCell>\n                      <Button\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        onClick={() => this.props.DeleteItem(opt.id)}\n                      >\n                        Delete\n                      </Button>\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </Paper>\n      </Grid>\n    );\n  }\n}\n\nChocoboList.propTypes = {\n  header: PropTypes.array.isRequired,\n  items: PropTypes.array.isRequired,\n};\n\nexport default ChocoboList;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport ChocoboNew from '../components/ChocoboNew';\nimport ChocoboList from '../components/ChocoboList';\nimport { get, keys, set, del } from \"idb-keyval\";\n\nconst uuidv1 = require('uuid/v1');\n\nclass Stable extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {stable: []};\n  }\n\n  async getItems() {\n    let payload = [];\n    const Ids = await keys();\n    for (var i = 0; i < Ids.length; i++) {\n      payload.push({id: Ids[i], chocobo: await get(Ids[i])})\n    }\n    return {stable: payload};\n  }\n\n  async componentDidMount() {\n    this.setState(await this.getItems());\n  }\n\n  addNewItem = (hp, attack, colour, speed) => {\n    const payload = {\n      hp: hp,\n      attack: attack,\n      speed: speed,\n      colour: colour\n    };\n\n    let id = uuidv1();\n    let item = {id: id, chocobo: payload};\n    set(id, payload);\n\n    this.setState(prevState => {\n      prevState.stable.push(item);\n      return {stable: prevState.stable};\n    });\n  };\n\n  DeleteItem = (id) => {\n    del(id);\n\n    this.setState(prevState => {\n      prevState.stable = prevState.stable.filter(chocobo => chocobo.id !== id);\n      return {stable: prevState.stable};\n    });\n  };\n\n  render() {\n    return (\n      <main>\n        <Grid container spacing={8} direction=\"column\" alignItems=\"stretch\" justify=\"center\">\n          <ChocoboList\n            items={this.state.stable}\n            DeleteItem={this.DeleteItem}\n            header={['HP', 'Attack', 'Speed', 'Colour', 'Value', 'Manage']}\n          />\n          <ChocoboNew addNewItem={this.addNewItem}/>\n        </Grid>\n      </main>\n    )\n  }\n}\n\nexport default Stable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Title from './Title';\n\nconst ContentTable = (props) =>\n  <Grid item xs>\n    <Paper>\n      <Title message={props.title} />\n      <Table>\n        <TableBody>\n          {props.headers.map((value, index) => {\n            return (\n              <TableRow key={value}>\n                <TableCell component=\"th\" scope=\"row\">{value}</TableCell>\n                <TableCell>{props.contents[index]}</TableCell>\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n    </Paper>\n  </Grid>;\n\nContentTable.propTypes = {\n  title: PropTypes.string.isRequired,\n  headers: PropTypes.array.isRequired,\n  contents: PropTypes.array.isRequired,\n};\n\nexport default ContentTable;\n","import training from '../data/training.json';\n\nexport const TrainingService = {\n    fetchAll\n};\n\nfunction fetchAll() {\n    return training;\n}\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport ContentTable from '../components/ContentTable';\nimport {TrainingService} from '../services/TrainingService';\n\nclass Training extends React.Component {\n  constructor() {\n    super();\n    this.state = {training: []};\n  }\n\n  async getItems() {\n    return {training: TrainingService.fetchAll()};\n  }\n\n  async componentDidMount() {\n    this.setState(await this.getItems());\n  }\n\n  render() {\n    return (\n      <main>\n        <Grid container spacing={8} alignItems=\"stretch\" justify=\"center\">\n          {this.state.training.map(train =>\n            <ContentTable\n              key={train.id}\n              title={train.title}\n              headers={train.headers}\n              contents={train.contents}\n            />\n          )}\n        </Grid>\n      </main>\n    );\n  }\n}\n\nexport default Training;\n","import React from 'react';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport AppBar from \"@material-ui/core/AppBar\";\nimport { NavLink } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\n\nconst Header = () =>\n  <AppBar position=\"static\" color=\"default\">\n    <Toolbar>\n      <Typography variant=\"title\" color=\"inherit\" noWrap>\n        MasterGlaive\n      </Typography>\n      <NavLink className=\"nav-link\" activeClassName=\"active\" to=\"/masterglaive/\">\n        <Button color=\"inherit\">\n          Birthplace status\n        </Button>\n      </NavLink>\n      <NavLink className=\"nav-link\" activeClassName=\"active\" to=\"/masterglaive/leaders\">\n        <Button color=\"inherit\">\n          City leaders\n        </Button>\n      </NavLink>\n      <NavLink className=\"nav-link\" activeClassName=\"active\" to=\"/masterglaive/stable\">\n        <Button color=\"inherit\">\n          Stable\n        </Button>\n      </NavLink>\n      <NavLink className=\"nav-link\" activeClassName=\"active\" to=\"/masterglaive/training\">\n        <Button color=\"inherit\">\n          Training\n        </Button>\n      </NavLink>\n    </Toolbar>\n  </AppBar>\n\nexport default Header;\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Birthplaces from './pages/Birthplaces';\nimport Leaders from './pages/Leaders';\nimport Stable from './pages/Stable';\nimport Training from './pages/Training';\nimport Header from \"./components/Header\";\n\nconst App = () =>\n  <div id=\"main\">\n    <CssBaseline />\n\n    <Header/>\n\n    <Route exact path=\"/masterglaive/\" component={Birthplaces}/>\n    <Route path=\"/masterglaive/leaders\" component={Leaders}/>\n    <Route path=\"/masterglaive/stable\" component={Stable}/>\n    <Route path=\"/masterglaive/training\" component={Training}/>\n  </div>;\n\nexport default App;\n","const isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\n\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\nregisterServiceWorker();\n"],"sourceRoot":""}