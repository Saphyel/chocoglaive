{"version":3,"sources":["components/Paragraph.js","components/AdvanceCard.js","services/BirthdayService.js","pages/Birthplaces.js","components/BasicCard.js","services/LeaderService.js","pages/Leaders.js","components/Title.js","components/ContentTable.js","components/SingleInput.js","components/Dropdown.js","components/RaisedButton.js","components/ChocoboList.js","services/TrainingService.js","services/ChocoboService.js","pages/Chocobos.js","components/MenuLink.js","App.js","serviceWorker.js","index.js"],"names":["uuidv1","require","Paragraph","props","react_default","a","createElement","Typography_default","variant","sentences","map","text","key","AdvanceCard","Grid_default","item","sm","md","lg","Card_default","CardHeader_default","title","subheader","subtitle","CardContent_default","color","components_Paragraph","content","BirthdayService","fetchAll","Promise","resolve","reject","birthplaces","Birthplaces","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","getItems","setState","container","spacing","alignItems","birthplace","components_AdvanceCard","id","React","Component","BasicCard","LeaderService","leaders","Leaders","leader","components_BasicCard","contents","Title","Toolbar_default","children","ContentTable","Paper_default","components_Title","Table_default","TableBody_default","headers","value","index","TableRow_default","TableCell_default","component","scope","SingleInput","xs","FormControl_default","margin","InputLabel_default","htmlFor","name","Input_default","type","placeholder","onChange","inputProps","aria-label","Dropdown","required","NativeSelect_default","defaultValue","selectedOption","options","opt","RaisedButton","Button_default","size","onClick","disabled","ChocoboList","handleClickOpen","open","handleClose","invalidChocobo","hp","attack","colour","speed","handleChange","bind","assertThisInitialized","handleSubmit","event","defineProperty","target","addNewItem","chocobo","parseInt","calcSpeed","Math","round","_this2","TableHead_default","header","items","calculator","components_RaisedButton","DeleteItem","length","align","Dialog_default","onClose","fullWidth","DialogTitle_default","onSubmit","justify","direction","components_SingleInput","components_Dropdown","TrainingService","training","customStore","Store","ChocoboService","fetch","insert","remove","_callee","payload","Ids","i","regenerator_default","wrap","_context","prev","next","keys","sent","t0","t1","t2","t3","push","abrupt","stop","_callee2","_context2","get","_callee3","_context3","set","_callee4","_context4","del","Stable","components_ChocoboList","delete","add","Training","train","components_ContentTable","Chocobos","prevState","stable","filter","_this$state","AppBar_default","position","Tabs_default","Tab_default","label","MenuLink","NavLink","className","activeClassName","to","link","message","App","CssBaseline_default","noWrap","components_MenuLink","Route","exact","path","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","BrowserRouter","basename","src_App","document","getElementById","URL","process","origin","addEventListener","concat","response","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.916fa7ee.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst uuidv1 = require(\"uuid/v1\");\n\nconst Paragraph = props =>\n  <Typography variant=\"body1\">\n    {props.sentences.map(text =>\n      <span key={uuidv1()}>{text}<br/></span>\n    )}\n  </Typography>;\n\nParagraph.propTypes = {\n  sentences: PropTypes.array.isRequired\n};\n\nexport default Paragraph;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paragraph from \"./Paragraph\";\n\nconst AdvanceCard = props =>\n  <Grid item sm={6} md={6} lg={6}>\n    <Card>\n      <CardHeader title={props.title} subheader={props.subtitle} />\n      <CardContent>\n        {props.require ? (\n          <Typography color=\"secondary\">Requires: {props.require}</Typography>\n        ) : null}\n        <Paragraph sentences={props.content} />\n      </CardContent>\n    </Card>\n  </Grid>;\n\nAdvanceCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  subtitle: PropTypes.string.isRequired,\n  require: PropTypes.string,\n  content: PropTypes.array.isRequired\n};\n\nexport default AdvanceCard;\n","import birthplaces from \"../data/birthplaces.json\";\n\nexport const BirthdayService = {\n  fetchAll\n};\n\nfunction fetchAll() {\n  return new Promise((resolve, reject) => resolve(birthplaces));\n}\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AdvanceCard from \"../components/AdvanceCard\";\nimport {BirthdayService} from \"../services/BirthdayService\";\n\nclass Birthplaces extends React.Component {\n  constructor() {\n    super();\n    this.state = {birthplaces: []};\n  }\n\n  async getItems() {\n    return {birthplaces: await BirthdayService.fetchAll()};\n  }\n\n  async componentDidMount() {\n    this.setState(await this.getItems());\n  }\n\n  render() {\n    const {birthplaces} = this.state;\n\n    return (\n      <main>\n        <Grid container spacing={8} alignItems=\"stretch\">\n          {birthplaces.map(birthplace =>\n            <AdvanceCard\n              key={birthplace.id}\n              title={birthplace.title}\n              subtitle={birthplace.subtitle}\n              require={birthplace.require}\n              content={birthplace.content}\n            />\n          )}\n        </Grid>\n      </main>\n    );\n  }\n}\n\nexport default Birthplaces;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Paragraph from \"./Paragraph\";\n\nconst BasicCard = props =>\n  <Grid item sm={6} md={6} lg={6}>\n    <Card>\n      <CardHeader title={props.title} />\n      <CardContent><Paragraph sentences={props.content} /></CardContent>\n    </Card>\n  </Grid>;\n\nBasicCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  content: PropTypes.array.isRequired\n};\n\nexport default BasicCard;\n","import leaders from \"../data/leaders.json\";\n\nexport const LeaderService = {\n  fetchAll\n};\n\nfunction fetchAll() {\n  return new Promise((resolve, reject) => resolve(leaders));\n}\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport BasicCard from \"../components/BasicCard\";\nimport {LeaderService} from \"../services/LeaderService\";\n\nclass Leaders extends React.Component {\n  constructor() {\n    super();\n    this.state = {leaders: []};\n  }\n\n  async getItems() {\n    return {leaders: await LeaderService.fetchAll()};\n  }\n\n  async componentDidMount() {\n    this.setState(await this.getItems());\n  }\n\n  render() {\n    const {leaders} = this.state;\n\n    return (\n      <main>\n        <Grid container spacing={8} alignItems=\"stretch\">\n          {leaders.map(leader =>\n            <BasicCard\n              key={leader.id}\n              title={leader.title}\n              content={leader.contents}\n            />\n          )}\n        </Grid>\n      </main>\n    );\n  }\n}\n\nexport default Leaders;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst Title = props =>\n  <Toolbar variant=\"dense\">\n    <Typography variant=\"h6\">{props.children}</Typography>\n  </Toolbar>;\n\nTitle.propTypes = {\n  children: PropTypes.string.isRequired\n};\n\nexport default Title;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Title from \"./Title\";\n\nconst ContentTable = props =>\n  <Grid item sm={6} md={6} lg={6}>\n    <Paper>\n      <Title>{props.title}</Title>\n      <Table>\n        <TableBody>\n          {props.headers.map((value, index) =>\n              <TableRow key={value}>\n                <TableCell component=\"th\" variant=\"head\" scope=\"row\">\n                  {value}\n                </TableCell>\n                <TableCell>{props.contents[index]}</TableCell>\n              </TableRow>\n          )}\n        </TableBody>\n      </Table>\n    </Paper>\n  </Grid>;\n\nContentTable.propTypes = {\n  title: PropTypes.string.isRequired,\n  headers: PropTypes.array.isRequired,\n  contents: PropTypes.array.isRequired\n};\n\nexport default ContentTable;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Input from \"@material-ui/core/Input\";\nimport Grid from \"@material-ui/core/Grid\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\n\nconst SingleInput = props =>\n  <Grid item xs={5}>\n    <FormControl margin=\"normal\">\n      <InputLabel htmlFor={props.name}>{props.title}</InputLabel>\n      <Input\n        type={props.type}\n        id={props.name}\n        name={props.name}\n        placeholder={props.placeholder}\n        value={props.content}\n        onChange={props.onChange}\n        inputProps={{\n          \"aria-label\": \"Description\"\n        }}\n      />\n    </FormControl>\n  </Grid>;\n\nSingleInput.propTypes = {\n  type: PropTypes.oneOf([\"text\", \"number\"]).isRequired,\n  title: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n  onChange: PropTypes.func,\n  content: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\n\nexport default SingleInput;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Grid from \"@material-ui/core/Grid\";\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\n\nconst Dropdown = props =>\n  <Grid item xs={5}>\n    <FormControl margin=\"normal\" required>\n      <InputLabel htmlFor={props.name}>{props.title}</InputLabel>\n      <NativeSelect\n        name={props.name}\n        onChange={props.onChange}\n        defaultValue={props.selectedOption}\n      >\n        {props.options.map(opt =>\n          <option key={opt} value={opt}>{opt}</option>\n        )}\n      </NativeSelect>\n    </FormControl>\n  </Grid>;\n\nDropdown.propTypes = {\n  name: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  onChange: PropTypes.func,\n  selectedOption: PropTypes.string,\n  options: PropTypes.array.isRequired\n};\n\nexport default Dropdown;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@material-ui/core/Button\";\n\nconst RaisedButton = props =>\n  <Button\n    variant=\"contained\"\n    color={props.color}\n    size={props.size}\n    type={props.type}\n    onClick={props.onClick}\n    disabled={props.disabled}\n  >\n    {props.children}\n  </Button>;\n\nRaisedButton.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.string,\n  type: PropTypes.string,\n  onClick: PropTypes.func,\n  disabled: PropTypes.bool\n};\n\nexport default RaisedButton;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Grid from \"@material-ui/core/Grid\";\nimport SingleInput from \"./SingleInput\";\nimport Dropdown from \"./Dropdown\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Title from \"./Title\";\nimport RaisedButton from \"./RaisedButton\";\n\nclass ChocoboList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open: false,\n      hp: \"\",\n      attack: \"\",\n      colour: \"Red\",\n      speed: \"D\"\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleClickOpen = () => this.setState({open: true});\n\n  handleClose = () => this.setState({open: false});\n\n  handleChange(event) {\n    this.setState({[event.target.name]: event.target.value});\n  }\n\n  invalidChocobo = () => {\n    if (this.state.hp === \"\") return true;\n    if (this.state.attack === \"\") return true;\n    return false;\n  };\n\n  handleSubmit(event) {\n    this.props.addNewItem(\n      this.state.hp,\n      this.state.attack,\n      this.state.colour,\n      this.state.speed\n    );\n    this.handleClose();\n  }\n\n  calcSpeed(value) {\n    if (value === \"C\") {\n      return 110;\n    } else if (value === \"B\") {\n      return 120;\n    } else if (value === \"A\") {\n      return 130;\n    } else if (value === \"A+\") {\n      return 140;\n    }\n    return 100;\n  }\n\n  calculator(chocobo) {\n    const hp = parseInt(chocobo.hp);\n    const attack = parseInt(chocobo.attack);\n    const speed = this.calcSpeed(chocobo.speed);\n\n    return Math.round(hp / 20 + attack / 10 + speed);\n  }\n\n  render() {\n    return (\n      <Grid item xs>\n        <Paper>\n          <Title>Stable of Chocobos</Title>\n          <Table>\n            <TableHead>\n              <TableRow>\n                {this.props.header.map(header =>\n                  <TableCell key={header}>{header}</TableCell>\n                )}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {this.props.items.map(opt =>\n                <TableRow key={opt.id}>\n                  <TableCell>{opt.chocobo.hp}</TableCell>\n                  <TableCell>{opt.chocobo.attack}</TableCell>\n                  <TableCell>{opt.chocobo.speed}</TableCell>\n                  <TableCell>{opt.chocobo.colour}</TableCell>\n                  <TableCell>{this.calculator(opt.chocobo)}</TableCell>\n                  <TableCell>\n                    <RaisedButton\n                      color=\"secondary\"\n                      size=\"small\"\n                      onClick={() => this.props.DeleteItem(opt.id)}\n                    >\n                      Delete\n                    </RaisedButton>\n                  </TableCell>\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n          {this.props.items.length ? null : (\n            <Typography align=\"center\" variant=\"subtitle1\">\n              Your stable is empty!\n            </Typography>\n          )}\n          <RaisedButton\n            color=\"primary\"\n            size=\"large\"\n            onClick={this.handleClickOpen}\n          >\n            New chocobo\n          </RaisedButton>\n          <Dialog open={this.state.open} onClose={this.handleClose} fullWidth>\n            <DialogTitle>Add a new chocobo</DialogTitle>\n            <form\n              id=\"chocobo\"\n              name=\"chocobo\"\n              onSubmit={() => this.handleSubmit()}\n            >\n              <Grid\n                container\n                spacing={16}\n                justify=\"center\"\n                alignItems=\"stretch\"\n                direction=\"row\"\n              >\n                <SingleInput\n                  type={\"number\"}\n                  title={\"HP\"}\n                  name={\"hp\"}\n                  placeholder={\"2000\"}\n                  onChange={this.handleChange}\n                />\n                <SingleInput\n                  type={\"number\"}\n                  title={\"Attack\"}\n                  name={\"attack\"}\n                  placeholder={\"1000\"}\n                  onChange={this.handleChange}\n                />\n                <Dropdown\n                  title={\"Colour\"}\n                  name={\"colour\"}\n                  options={[\"Red\", \"Blue\", \"Yellow\", \"Black\", \"Green\"]}\n                  selectedOption={this.state.colour}\n                  onChange={this.handleChange}\n                />\n                <Dropdown\n                  title={\"Speed\"}\n                  name={\"speed\"}\n                  options={[\"D\", \"C\", \"B\", \"A\", \"A+\"]}\n                  selectedOption={this.state.speed}\n                  onChange={this.handleChange}\n                />\n                <Grid item xs={4}>\n                  <RaisedButton\n                    color=\"primary\"\n                    size=\"large\"\n                    type=\"submit\"\n                    disabled={this.invalidChocobo()}\n                  >\n                    Submit\n                  </RaisedButton>\n                </Grid>\n                <Grid item xs={3}>\n                  <RaisedButton\n                    color=\"secondary\"\n                    size=\"large\"\n                    onClick={this.handleClose}\n                  >\n                    Cancel\n                  </RaisedButton>\n                </Grid>\n              </Grid>\n            </form>\n          </Dialog>\n        </Paper>\n      </Grid>\n    );\n  }\n}\n\nChocoboList.propTypes = {\n  header: PropTypes.array.isRequired,\n  items: PropTypes.array.isRequired\n};\n\nexport default ChocoboList;\n","import training from \"../data/training.json\";\n\nexport const TrainingService = {\n  fetchAll\n};\n\nfunction fetchAll() {\n  return new Promise((resolve, reject) => resolve(training));\n}\n","import {Store, get, keys, set, del} from \"idb-keyval\";\n\nconst uuidv1 = require(\"uuid/v1\");\nconst customStore = new Store('saphyel', 'masterglaive');\n\nexport const ChocoboService = {\n  fetchAll,\n  fetch,\n  insert,\n  remove\n};\n\nasync function fetchAll() {\n  let payload = [];\n  const Ids = await keys(customStore);\n  for (var i = 0; i < Ids.length; i++) {\n    payload.push({id: Ids[i], chocobo: await fetch(Ids[i])})\n  }\n  return payload;\n}\n\nasync function fetch(id) {\n  return await get(id, customStore);\n}\n\nasync function insert(hp, attack, colour, speed) {\n  const id = uuidv1();\n  const payload = {\n    hp: hp,\n    attack: attack,\n    speed: speed,\n    colour: colour\n  };\n\n  await set(id, payload, customStore);\n\n  return {id: id, chocobo: payload};\n}\n\nasync function remove(id) {\n  await del(id, customStore);\n\n  return true;\n}\n","import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ContentTable from \"../components/ContentTable\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport ChocoboList from \"../components/ChocoboList\";\nimport {TrainingService} from \"../services/TrainingService\";\nimport {ChocoboService} from \"../services/ChocoboService\";\n\nfunction Stable(props) {\n  return (\n    <Grid container spacing={8} alignItems=\"stretch\" direction=\"column\">\n      <ChocoboList\n        DeleteItem={props.delete}\n        addNewItem={props.add}\n        header={[\"HP\", \"Attack\", \"Speed\", \"Colour\", \"Value\", \"Manage\"]}\n        items={props.children}\n      />\n    </Grid>\n  );\n}\n\nfunction Training(props) {\n  return (\n    <Grid container spacing={8} alignItems=\"stretch\" justify=\"center\">\n      {props.children.map(train =>\n        <ContentTable\n          key={train.id}\n          title={train.title}\n          headers={train.headers}\n          contents={train.contents}\n        />\n      )}\n    </Grid>\n  );\n}\n\nclass Chocobos extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      value: \"stable\",\n      stable: [],\n      training: []\n    };\n  }\n\n  async getItems() {\n    return {\n      stable: await ChocoboService.fetchAll(),\n      training: await TrainingService.fetchAll()\n    };\n  }\n\n  async componentDidMount() {\n    this.setState(await this.getItems());\n  }\n\n  addNewItem = (hp, attack, colour, speed) => {\n    const item = ChocoboService.insert(hp, attack, colour, speed);\n    this.setState(prevState => {\n      prevState.stable.push(item);\n      return {stable: prevState.stable};\n    });\n  };\n\n  DeleteItem = (id) => {\n    ChocoboService.remove(id);\n\n    this.setState(prevState => {\n      prevState.stable = prevState.stable.filter(chocobo => chocobo.id !== id);\n      return {stable: prevState.stable};\n    });\n  };\n\n  handleChange = (event, value) => this.setState({value});\n\n  render() {\n    const {value, stable, training} = this.state;\n\n    return (\n      <main>\n        <AppBar position=\"static\">\n          <Tabs value={value} onChange={this.handleChange} fullWidth>\n            <Tab value=\"stable\" label=\"Stable\" />\n            <Tab value=\"training\" label=\"Training\" />\n          </Tabs>\n        </AppBar>\n        {value === \"stable\" && <Stable delete={this.DeleteItem} add={this.addNewItem}>{stable}</Stable>}\n        {value === \"training\" && <Training>{training}</Training>}\n      </main>\n    );\n  }\n}\n\nexport default Chocobos;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {NavLink} from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\n\nconst MenuLink = props =>\n  <NavLink className=\"nav-link\" activeClassName=\"active\" to={props.link}>\n    <Button color=\"inherit\">{props.message}</Button>\n  </NavLink>;\n\nMenuLink.propTypes = {\n  link: PropTypes.string.isRequired,\n  message: PropTypes.string.isRequired\n};\n\nexport default MenuLink;\n","import React from \"react\";\nimport {Route} from \"react-router-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Birthplaces from \"./pages/Birthplaces\";\nimport Leaders from \"./pages/Leaders\";\nimport Chocobos from \"./pages/Chocobos\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport MenuLink from \"./components/MenuLink\";\n\nconst App = () =>\n  <div id=\"main\">\n    <CssBaseline />\n    <AppBar position=\"static\" color=\"default\">\n      <Toolbar>\n        <Typography variant=\"h6\" color=\"inherit\" noWrap>\n          MasterGlaive\n        </Typography>\n        <MenuLink link=\"/\" message=\"Birthplace status\" />\n        <MenuLink link=\"/leaders\" message=\"City leaders\" />\n        <MenuLink link=\"/chocobos\" message=\"Chocobos\" />\n      </Toolbar>\n    </AppBar>\n    <Route exact path=\"/\" component={Birthplaces}/>\n    <Route path=\"/leaders\" component={Leaders}/>\n    <Route path=\"/chocobos\" component={Chocobos}/>\n  </div>;\n\nexport default App;\n","const isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter basename=\"/masterglaive\">\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}