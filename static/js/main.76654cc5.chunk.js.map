{"version":3,"sources":["components/Paragraph.js","components/AdvanceCard.js","services/BirthdayService.js","pages/Birthplaces.js","components/BasicCard.js","services/LeaderService.js","pages/Leaders.js","components/form/SingleInput.js","components/form/Dropdown.js","components/Title.js","components/ChocoboNew.js","components/ChocoboList.js","pages/Stable.js","components/ContentTable.js","services/TrainingService.js","pages/Training.js","components/Header.js","App.js","registerServiceWorker.js","index.js"],"names":["uuidv1","__webpack_require__","components_Paragraph","props","react_default","a","createElement","Typography_default","component","sentences","map","text","key","components_AdvanceCard","Grid_default","item","sm","md","lg","Card_default","CardHeader_default","title","subheader","subtitle","CardContent_default","requirement","color","content","BirthdayService","fetchAll","birthplaces","pages_Birthplaces","Birthplaces","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","state","getItems","setState","container","spacing","alignItems","birthplace","id","Component","components_BasicCard","LeaderService","leaders","pages_Leaders","Leaders","Leaders_classCallCheck","Leaders_possibleConstructorReturn","Leaders_getPrototypeOf","leader","contents","form_SingleInput","FormControl_default","margin","InputLabel_default","htmlFor","name","Input_default","onChange","type","inputType","placeholder","value","required","inputProps","aria-label","form_Dropdown","NativeSelect_default","defaultValue","selectedOption","options","opt","components_Title","Toolbar_default","variant","message","components_ChocoboNew","ChocoboNew","ChocoboNew_classCallCheck","ChocoboNew_getPrototypeOf","hp","attack","colour","speed","handleChange","bind","ChocoboNew_assertThisInitialized","handleSubmit","event","target","preventDefault","addNewItem","xs","Paper_default","className","onSubmit","FormGroup_default","row","Button_default","components_ChocoboList","chocobo","parseInt","calcSpeed","Math","round","Table_default","TableHead_default","TableRow_default","header","TableCell_default","TableBody_default","items","calculator","onClick","DeleteItem","Stable_uuidv1","pages_Stable","Stable","Stable_classCallCheck","Stable_possibleConstructorReturn","Stable_getPrototypeOf","payload","Object","idb_keyval","prevState","stable","push","filter","Ids","i","length","direction","justify","components_ContentTable","headers","index","scope","TrainingService","training","pages_Training","Training","Training_classCallCheck","Training_possibleConstructorReturn","Training_getPrototypeOf","train","components_Header","AppBar_default","position","noWrap","NavLink","activeClassName","to","src_App","CssBaseline_default","Route","exact","path","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","react_dom_default","render","BrowserRouter","basename","document","getElementById","URL","origin","addEventListener","fetch","response","status","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.76654cc5.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nconst uuidv1 = require('uuid/v1');\n\nconst Paragraph = props =>\n  <Typography component=\"p\">\n    {props.sentences.map(text =>\n      <span key={uuidv1()}>{text}<br/></span>\n    )}\n  </Typography>;\n\nParagraph.propTypes = {\n  sentences: PropTypes.array.isRequired\n};\n\nexport default Paragraph;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Paragraph from './Paragraph';\n\nconst AdvanceCard = props =>\n  <Grid item sm={6} md={6} lg={6}>\n    <Card>\n      <CardHeader title={props.title} subheader={props.subtitle}/>\n      <CardContent>\n        {props.requirement ? (\n        <Typography color=\"secondary\">\n          Requires: {props.requirement}\n        </Typography> ) : null}\n        <Paragraph sentences={props.content} />\n      </CardContent>\n    </Card>\n  </Grid>;\n\nAdvanceCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  subtitle: PropTypes.string.isRequired,\n  requirement: PropTypes.string,\n  content: PropTypes.array.isRequired\n};\n\nexport default AdvanceCard;\n","import birthplaces from '../data/birthplaces.json';\n\nexport const BirthdayService = {\n    fetchAll\n};\n\nfunction fetchAll() {\n    return birthplaces;\n}\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport AdvanceCard from '../components/AdvanceCard';\nimport {BirthdayService} from '../services/BirthdayService';\n\nclass Birthplaces extends React.Component {\n  constructor() {\n    super();\n    this.state = {birthplaces: []};\n  }\n\n  async getItems() {\n    return {birthplaces: BirthdayService.fetchAll()};\n  }\n\n  async componentDidMount() {\n    this.setState(await this.getItems());\n  }\n\n  render() {\n    return (\n      <main>\n        <Grid container spacing={8} alignItems=\"stretch\">\n          {this.state.birthplaces.map(birthplace =>\n            <AdvanceCard\n              key={birthplace.id}\n              title={birthplace.title}\n              subtitle={birthplace.subtitle}\n              requirement={birthplace.requirement}\n              content={birthplace.content}\n            />\n          )}\n        </Grid>\n      </main>\n    );\n  }\n}\n\nexport default Birthplaces;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Paragraph from './Paragraph';\n\nconst BasicCard = props =>\n  <Grid item sm={6} md={6} lg={6}>\n    <Card>\n      <CardHeader title={props.title}/>\n      <CardContent>\n        <Paragraph sentences={props.content} />\n      </CardContent>\n    </Card>\n  </Grid>;\n\nBasicCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  content: PropTypes.array.isRequired\n};\n\nexport default BasicCard;\n","import leaders from '../data/leaders.json';\n\nexport const LeaderService = {\n    fetchAll\n};\n\nfunction fetchAll() {\n    return leaders;\n}\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport BasicCard from '../components/BasicCard';\nimport {LeaderService} from '../services/LeaderService';\n\nclass Leaders extends React.Component {\n  constructor() {\n    super();\n    this.state = {leaders: []};\n  }\n\n  async getItems() {\n    return {leaders: LeaderService.fetchAll()};\n  }\n\n  async componentDidMount() {\n    this.setState(await this.getItems());\n  }\n\n  render() {\n    return (\n      <main>\n        <Grid container spacing={8} alignItems=\"stretch\">\n          {this.state.leaders.map(leader =>\n            <BasicCard\n              key={leader.id}\n              title={leader.title}\n              content={leader.contents}\n            />\n          )}\n        </Grid>\n      </main>\n    );\n  }\n}\n\nexport default Leaders;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\n\nconst SingleInput = (props) =>\n  <FormControl margin=\"normal\">\n    <InputLabel htmlFor={props.name}>{props.title}</InputLabel>\n    <Input\n      id={props.name}\n      name={props.name}\n      onChange={props.onChange}\n      type={props.inputType}\n      placeholder={props.placeholder}\n      value={props.content}\n      required={props.required}\n      inputProps={{\n        'aria-label': 'Description',\n      }}\n    />\n  </FormControl>;\n\nSingleInput.propTypes = {\n  inputType: PropTypes.oneOf(['text', 'number']).isRequired,\n  title: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n  content: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ])\n};\n\nexport default SingleInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport NativeSelect from '@material-ui/core/NativeSelect';\n\nconst Dropdown = props =>\n  <FormControl margin=\"normal\" required>\n    <InputLabel htmlFor={props.name}>\n      {props.title}\n    </InputLabel>\n    <NativeSelect\n      name={props.name}\n      onChange={props.onChange}\n      defaultValue={props.selectedOption}>\n      {props.options.map(opt =>\n        <option key={opt} value={opt}>{opt}</option>\n      )}\n    </NativeSelect>\n  </FormControl>;\n\nDropdown.propTypes = {\n  name: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  options: PropTypes.array.isRequired,\n  selectedOption: PropTypes.string\n};\n\nexport default Dropdown;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nconst Title = props =>\n  <Toolbar variant=\"dense\">\n    <Typography variant=\"title\">{props.message}</Typography>\n  </Toolbar>;\n\nTitle.propTypes = {\n  message: PropTypes.string.isRequired\n};\n\nexport default Title;\n","import React from 'react';\nimport SingleInput from './form/SingleInput';\nimport Dropdown from './form/Dropdown';\nimport Paper from '@material-ui/core/Paper';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Title from './Title';\n\nclass ChocoboNew extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hp: '',\n      attack: '',\n      colour: 'Red',\n      speed: 'D'\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({[event.target.name]: event.target.value});\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.addNewItem(\n      this.state.hp,\n      this.state.attack,\n      this.state.colour,\n      this.state.speed,\n    );\n  }\n\n  render() {\n    return (\n      <Grid item xs>\n        <Paper>\n          <Title message=\"Add a new chocobo\"/>\n          <form className=\"new\" onSubmit={this.handleSubmit}>\n            <FormGroup row>\n              <SingleInput\n                inputType={'number'}\n                title={'HP'}\n                name={'hp'}\n                placeholder={'2000'}\n                required={true}\n                onChange={this.handleChange}\n              />\n              <SingleInput\n                inputType={'number'}\n                title={'Attack'}\n                name={'attack'}\n                placeholder={'1000'}\n                required={true}\n                onChange={this.handleChange}\n              />\n            </FormGroup>\n            <FormGroup row>\n              <Dropdown\n                title={'Colour'}\n                name={'colour'}\n                options={['Red', 'Blue', 'Yellow', 'Black', 'Green']}\n                selectedOption={this.state.colour}\n                onChange={this.handleChange}\n              />\n              <Dropdown\n                title={'Speed'}\n                name={'speed'}\n                options={['D', 'C', 'B', 'A', 'A+']}\n                onChange={this.handleChange}\n                selectedOption={this.state.speed}\n              />\n            </FormGroup>\n            <FormGroup row>\n              <Button variant=\"raised\" color=\"primary\" type=\"submit\">\n                Add\n              </Button>\n            </FormGroup>\n          </form>\n        </Paper>\n      </Grid>\n    );\n  }\n}\n\nexport default ChocoboNew;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableBody from '@material-ui/core/TableBody';\nimport Button from '@material-ui/core/Button';\nimport Title from './Title';\n\nclass ChocoboList extends React.Component {\n\n  calcSpeed(value) {\n    if (value === 'C') {\n      return 110;\n    }\n    else if (value === 'B') {\n      return 120;\n    }\n    else if (value === 'A') {\n      return 130;\n    }\n    else if (value === 'A+') {\n      return 140;\n    }\n    return 100;\n  }\n\n  calculator(chocobo) {\n    const hp = parseInt(chocobo.hp);\n    const attack = parseInt(chocobo.attack);\n    const speed = this.calcSpeed(chocobo.speed)\n    return Math.round((hp / 20) + (attack / 10) + speed);\n  }\n\n  render() {\n    return (\n      <Grid item xs>\n        <Paper>\n          <Title message=\"Stable of Chocobos\"/>\n          <Table>\n            <TableHead>\n              <TableRow>\n              {this.props.header.map(header =>\n                <TableCell key={header}>{header}</TableCell>\n              )}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {this.props.items.map(opt =>\n                <TableRow key={opt.id}>\n                  <TableCell>{opt.chocobo.hp}</TableCell>\n                  <TableCell>{opt.chocobo.attack}</TableCell>\n                  <TableCell>{opt.chocobo.speed}</TableCell>\n                  <TableCell>{opt.chocobo.colour}</TableCell>\n                  <TableCell>{this.calculator(opt.chocobo)}</TableCell>\n                  <TableCell>\n                    <Button\n                      variant=\"contained\"\n                      color=\"secondary\"\n                      onClick={() => this.props.DeleteItem(opt.id)}\n                    >\n                      Delete\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </Paper>\n      </Grid>\n    );\n  }\n}\n\nChocoboList.propTypes = {\n  header: PropTypes.array.isRequired,\n  items: PropTypes.array.isRequired,\n};\n\nexport default ChocoboList;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport ChocoboNew from '../components/ChocoboNew';\nimport ChocoboList from '../components/ChocoboList';\nimport { get, keys, set, del } from \"idb-keyval\";\n\nconst uuidv1 = require('uuid/v1');\n\nclass Stable extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {stable: []};\n  }\n\n  async getItems() {\n    let payload = [];\n    const Ids = await keys();\n    for (var i = 0; i < Ids.length; i++) {\n      payload.push({id: Ids[i], chocobo: await get(Ids[i])})\n    }\n    return {stable: payload};\n  }\n\n  async componentDidMount() {\n    this.setState(await this.getItems());\n  }\n\n  addNewItem = (hp, attack, colour, speed) => {\n    const payload = {\n      hp: hp,\n      attack: attack,\n      speed: speed,\n      colour: colour\n    };\n\n    let id = uuidv1();\n    let item = {id: id, chocobo: payload};\n    set(id, payload);\n\n    this.setState(prevState => {\n      prevState.stable.push(item);\n      return {stable: prevState.stable};\n    });\n  };\n\n  DeleteItem = (id) => {\n    del(id);\n\n    this.setState(prevState => {\n      prevState.stable = prevState.stable.filter(chocobo => chocobo.id !== id);\n      return {stable: prevState.stable};\n    });\n  };\n\n  render() {\n    return (\n      <main>\n        <Grid\n          container\n          spacing={8}\n          direction=\"column\"\n          alignItems=\"stretch\"\n          justify=\"center\"\n        >\n          <ChocoboList\n            items={this.state.stable}\n            DeleteItem={this.DeleteItem}\n            header={['HP', 'Attack', 'Speed', 'Colour', 'Value', 'Manage']}\n          />\n          <ChocoboNew addNewItem={this.addNewItem}/>\n        </Grid>\n      </main>\n    )\n  }\n}\n\nexport default Stable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Title from './Title';\n\nconst ContentTable = props =>\n  <Grid item sm={6} md={6} lg={6}>\n    <Paper>\n      <Title message={props.title} />\n      <Table>\n        <TableBody>\n          {props.headers.map((value, index) => {\n            return (\n              <TableRow key={value}>\n                <TableCell component=\"th\" scope=\"row\">{value}</TableCell>\n                <TableCell>{props.contents[index]}</TableCell>\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n    </Paper>\n  </Grid>;\n\nContentTable.propTypes = {\n  title: PropTypes.string.isRequired,\n  headers: PropTypes.array.isRequired,\n  contents: PropTypes.array.isRequired,\n};\n\nexport default ContentTable;\n","import training from '../data/training.json';\n\nexport const TrainingService = {\n    fetchAll\n};\n\nfunction fetchAll() {\n    return training;\n}\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport ContentTable from '../components/ContentTable';\nimport {TrainingService} from '../services/TrainingService';\n\nclass Training extends React.Component {\n  constructor() {\n    super();\n    this.state = {training: []};\n  }\n\n  async getItems() {\n    return {training: TrainingService.fetchAll()};\n  }\n\n  async componentDidMount() {\n    this.setState(await this.getItems());\n  }\n\n  render() {\n    return (\n      <main>\n        <Grid container spacing={8} alignItems=\"stretch\" justify=\"center\">\n          {this.state.training.map(train =>\n            <ContentTable\n              key={train.id}\n              title={train.title}\n              headers={train.headers}\n              contents={train.contents}\n            />\n          )}\n        </Grid>\n      </main>\n    );\n  }\n}\n\nexport default Training;\n","import React from 'react';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport AppBar from \"@material-ui/core/AppBar\";\nimport { NavLink } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\n\nconst Header = () =>\n  <AppBar position=\"static\" color=\"default\">\n    <Toolbar>\n      <Typography variant=\"title\" color=\"inherit\" noWrap>\n        MasterGlaive\n      </Typography>\n      <NavLink className=\"nav-link\" activeClassName=\"active\" to=\"/masterglaive/\">\n        <Button color=\"inherit\">\n          Birthplace status\n        </Button>\n      </NavLink>\n      <NavLink className=\"nav-link\" activeClassName=\"active\" to=\"/masterglaive/leaders\">\n        <Button color=\"inherit\">\n          City leaders\n        </Button>\n      </NavLink>\n      <NavLink className=\"nav-link\" activeClassName=\"active\" to=\"/masterglaive/stable\">\n        <Button color=\"inherit\">\n          Stable\n        </Button>\n      </NavLink>\n      <NavLink className=\"nav-link\" activeClassName=\"active\" to=\"/masterglaive/training\">\n        <Button color=\"inherit\">\n          Training\n        </Button>\n      </NavLink>\n    </Toolbar>\n  </AppBar>;\n\nexport default Header;\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Birthplaces from './pages/Birthplaces';\nimport Leaders from './pages/Leaders';\nimport Stable from './pages/Stable';\nimport Training from './pages/Training';\nimport Header from \"./components/Header\";\n\nconst App = () =>\n  <div id=\"main\">\n    <CssBaseline />\n\n    <Header/>\n\n    <Route exact path=\"/\" component={Birthplaces}/>\n    <Route path=\"/leaders\" component={Leaders}/>\n    <Route path=\"/stable\" component={Stable}/>\n    <Route path=\"/training\" component={Training}/>\n  </div>;\n\nexport default App;\n","const isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\n\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(\n  <BrowserRouter basename=\"/masterglaive\">\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\nregisterServiceWorker();\n"],"sourceRoot":""}