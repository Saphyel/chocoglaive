{"version":3,"sources":["components/Paragraph.js","components/AdvanceCard.js","services/BirthdayService.js","pages/Birthplaces.js","components/BasicCard.js","services/LeaderService.js","pages/Leaders.js","components/Title.js","components/ContentTable.js","components/form/SingleInput.js","components/form/Dropdown.js","components/ChocoboList.js","pages/Stable.js","services/TrainingService.js","pages/Chocobos.js","components/MenuLink.js","App.js","registerServiceWorker.js","index.js"],"names":["uuidv1","__webpack_require__","components_Paragraph","props","react_default","a","createElement","Typography_default","component","sentences","map","text","key","components_AdvanceCard","Grid_default","item","sm","md","lg","Card_default","CardHeader_default","title","subheader","subtitle","CardContent_default","requirement","color","content","BirthdayService","fetchAll","Promise","resolve","reject","data_birthplaces","pages_Birthplaces","Birthplaces","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","state","birthplaces","getItems","setState","container","spacing","alignItems","birthplace","id","Component","components_BasicCard","LeaderService","data_leaders","pages_Leaders","Leaders","Leaders_classCallCheck","Leaders_possibleConstructorReturn","Leaders_getPrototypeOf","leaders","leader","contents","components_Title","Toolbar_default","variant","message","components_ContentTable","Paper_default","Table_default","TableBody_default","headers","value","index","TableRow_default","TableCell_default","scope","form_SingleInput","xs","FormControl_default","margin","InputLabel_default","htmlFor","name","Input_default","onChange","type","inputType","placeholder","required","inputProps","aria-label","form_Dropdown","NativeSelect_default","defaultValue","selectedOption","options","opt","components_ChocoboList","ChocoboList","ChocoboList_classCallCheck","ChocoboList_getPrototypeOf","handleClickOpen","open","handleClose","validChocobo","hp","attack","colour","speed","handleChange","bind","ChocoboList_assertThisInitialized","handleSubmit","event","target","preventDefault","addNewItem","chocobo","parseInt","calcSpeed","Math","round","_this2","TableHead_default","header","items","calculator","Button_default","size","onClick","DeleteItem","Dialog_default","onClose","DialogTitle_default","justify","direction","onSubmit","ref","Stable_uuidv1","pages_Stable","Stable","Stable_classCallCheck","Stable_possibleConstructorReturn","Stable_getPrototypeOf","payload","Object","idb_keyval","prevState","stable","push","filter","Ids","i","length","TrainingService","data_training","Training","children","train","pages_Chocobos","Chocobos","Chocobos_classCallCheck","Chocobos_possibleConstructorReturn","Chocobos_getPrototypeOf","training","_this$state","AppBar_default","position","Tabs_default","fullWidth","Tab_default","label","components_MenuLink","NavLink","className","activeClassName","to","link","src_App","CssBaseline_default","noWrap","Route","exact","path","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","react_dom_default","render","BrowserRouter","basename","document","getElementById","URL","origin","addEventListener","fetch","response","status","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6c880a45.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nconst uuidv1 = require('uuid/v1');\n\nconst Paragraph = props =>\n  <Typography component=\"p\">\n    {props.sentences.map(text =>\n      <span key={uuidv1()}>{text}<br/></span>\n    )}\n  </Typography>;\n\nParagraph.propTypes = {\n  sentences: PropTypes.array.isRequired\n};\n\nexport default Paragraph;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Paragraph from './Paragraph';\n\nconst AdvanceCard = props =>\n  <Grid item sm={6} md={6} lg={6}>\n    <Card>\n      <CardHeader title={props.title} subheader={props.subtitle}/>\n      <CardContent>\n        {props.requirement ? (\n        <Typography color=\"secondary\">\n          Requires: {props.requirement}\n        </Typography> ) : null}\n        <Paragraph sentences={props.content} />\n      </CardContent>\n    </Card>\n  </Grid>;\n\nAdvanceCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  subtitle: PropTypes.string.isRequired,\n  requirement: PropTypes.string,\n  content: PropTypes.array.isRequired\n};\n\nexport default AdvanceCard;\n","import birthplaces from '../data/birthplaces.json';\n\nexport const BirthdayService = {\n    fetchAll\n};\n\nfunction fetchAll() {\n    return new Promise((resolve, reject) => resolve(birthplaces));\n}\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport AdvanceCard from '../components/AdvanceCard';\nimport {BirthdayService} from '../services/BirthdayService';\n\nclass Birthplaces extends React.Component {\n  constructor() {\n    super();\n    this.state = {birthplaces: []};\n  }\n\n  async getItems() {\n    return {birthplaces: await BirthdayService.fetchAll()};\n  }\n\n  async componentDidMount() {\n    this.setState(await this.getItems());\n  }\n\n  render() {\n    const {birthplaces} = this.state;\n\n    return (\n      <main>\n        <Grid container spacing={8} alignItems=\"stretch\">\n          {birthplaces.map(birthplace =>\n            <AdvanceCard\n              key={birthplace.id}\n              title={birthplace.title}\n              subtitle={birthplace.subtitle}\n              requirement={birthplace.requirement}\n              content={birthplace.content}\n            />\n          )}\n        </Grid>\n      </main>\n    );\n  }\n}\n\nexport default Birthplaces;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Paragraph from './Paragraph';\n\nconst BasicCard = props =>\n  <Grid item sm={6} md={6} lg={6}>\n    <Card>\n      <CardHeader title={props.title}/>\n      <CardContent><Paragraph sentences={props.content} /></CardContent>\n    </Card>\n  </Grid>;\n\nBasicCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  content: PropTypes.array.isRequired\n};\n\nexport default BasicCard;\n","import leaders from '../data/leaders.json';\n\nexport const LeaderService = {\n    fetchAll\n};\n\nfunction fetchAll() {\n    return new Promise((resolve, reject) => resolve(leaders));\n}\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport BasicCard from '../components/BasicCard';\nimport {LeaderService} from '../services/LeaderService';\n\nclass Leaders extends React.Component {\n  constructor() {\n    super();\n    this.state = {leaders: []};\n  }\n\n  async getItems() {\n    return {leaders: await LeaderService.fetchAll()};\n  }\n\n  async componentDidMount() {\n    this.setState(await this.getItems());\n  }\n\n  render() {\n    const {leaders} = this.state;\n\n    return (\n      <main>\n        <Grid container spacing={8} alignItems=\"stretch\">\n          {leaders.map(leader =>\n            <BasicCard\n              key={leader.id}\n              title={leader.title}\n              content={leader.contents}\n            />\n          )}\n        </Grid>\n      </main>\n    );\n  }\n}\n\nexport default Leaders;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nconst Title = props =>\n  <Toolbar variant=\"dense\">\n    <Typography variant=\"title\">{props.message}</Typography>\n  </Toolbar>;\n\nTitle.propTypes = {\n  message: PropTypes.string.isRequired\n};\n\nexport default Title;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Title from './Title';\n\nconst ContentTable = props =>\n  <Grid item sm={6} md={6} lg={6}>\n    <Paper>\n      <Title message={props.title} />\n      <Table>\n        <TableBody>\n          {props.headers.map((value, index) => {\n            return (\n              <TableRow key={value}>\n                <TableCell component=\"th\" scope=\"row\">{value}</TableCell>\n                <TableCell>{props.contents[index]}</TableCell>\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n    </Paper>\n  </Grid>;\n\nContentTable.propTypes = {\n  title: PropTypes.string.isRequired,\n  headers: PropTypes.array.isRequired,\n  contents: PropTypes.array.isRequired,\n};\n\nexport default ContentTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport Grid from '@material-ui/core/Grid';\nimport InputLabel from '@material-ui/core/InputLabel';\n\nconst SingleInput = props =>\n  <Grid item xs={5}>\n    <FormControl margin=\"normal\">\n      <InputLabel htmlFor={props.name}>{props.title}</InputLabel>\n      <Input\n        id={props.name}\n        name={props.name}\n        onChange={props.onChange}\n        type={props.inputType}\n        placeholder={props.placeholder}\n        value={props.content}\n        required={props.required}\n        inputProps={{\n          'aria-label': 'Description',\n        }}\n      />\n    </FormControl>\n  </Grid>;\n\nSingleInput.propTypes = {\n  inputType: PropTypes.oneOf(['text', 'number']).isRequired,\n  title: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n  content: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ])\n};\n\nexport default SingleInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Grid from '@material-ui/core/Grid';\nimport NativeSelect from '@material-ui/core/NativeSelect';\n\nconst Dropdown = props =>\n  <Grid item xs={5}>\n    <FormControl margin=\"normal\" required>\n      <InputLabel htmlFor={props.name}>{props.title}</InputLabel>\n      <NativeSelect\n        name={props.name}\n        onChange={props.onChange}\n        defaultValue={props.selectedOption}>\n        {props.options.map(opt =>\n          <option key={opt} value={opt}>{opt}</option>\n        )}\n      </NativeSelect>\n    </FormControl>\n  </Grid>;\n\nDropdown.propTypes = {\n  name: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  options: PropTypes.array.isRequired,\n  selectedOption: PropTypes.string\n};\n\nexport default Dropdown;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport SingleInput from './form/SingleInput';\nimport Dropdown from './form/Dropdown';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableBody from '@material-ui/core/TableBody';\nimport Button from '@material-ui/core/Button';\nimport Title from './Title';\n\nclass ChocoboList extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open: false,\n      hp: '',\n      attack: '',\n      colour: 'Red',\n      speed: 'D'\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleClickOpen = () => this.setState({open: true});\n\n  handleClose = () => this.setState({open: false});\n\n  handleChange(event) {\n    this.setState({[event.target.name]: event.target.value});\n  }\n\n  validChocobo = () => {\n    if (this.state.hp === '') return false;\n    if (this.state.attack === '') return false;\n    return true;\n  };\n\n  handleSubmit(event) {\n    event.preventDefault();\n    if (this.validChocobo()) {\n      this.props.addNewItem(\n        this.state.hp,\n        this.state.attack,\n        this.state.colour,\n        this.state.speed,\n      );\n      this.handleClose();\n    }\n  }\n\n  calcSpeed(value) {\n    if (value === 'C') {\n      return 110;\n    }\n    else if (value === 'B') {\n      return 120;\n    }\n    else if (value === 'A') {\n      return 130;\n    }\n    else if (value === 'A+') {\n      return 140;\n    }\n    return 100;\n  }\n\n  calculator(chocobo) {\n    const hp = parseInt(chocobo.hp);\n    const attack = parseInt(chocobo.attack);\n    const speed = this.calcSpeed(chocobo.speed);\n\n    return Math.round((hp / 20) + (attack / 10) + speed);\n  }\n\n  render() {\n    return (\n      <Grid item xs>\n        <Paper>\n          <Title message=\"Stable of Chocobos\"/>\n          <Table>\n            <TableHead>\n              <TableRow>\n                {this.props.header.map(header =>\n                  <TableCell key={header}>{header}</TableCell>\n                )}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {this.props.items.map(opt =>\n                <TableRow key={opt.id}>\n                  <TableCell>{opt.chocobo.hp}</TableCell>\n                  <TableCell>{opt.chocobo.attack}</TableCell>\n                  <TableCell>{opt.chocobo.speed}</TableCell>\n                  <TableCell>{opt.chocobo.colour}</TableCell>\n                  <TableCell>{this.calculator(opt.chocobo)}</TableCell>\n                  <TableCell>\n                    <Button\n                      size=\"small\"\n                      variant=\"contained\"\n                      color=\"secondary\"\n                      onClick={() => this.props.DeleteItem(opt.id)}\n                    >\n                      Delete\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n          <Button\n            variant=\"raised\"\n            size=\"large\"\n            color=\"primary\"\n            onClick={this.handleClickOpen}\n          >\n            New chocobo\n          </Button>\n          <Dialog open={this.state.open} onClose={this.handleClose}>\n            <DialogTitle>Add a new chocobo</DialogTitle>\n            <Grid\n              container\n              spacing={16}\n              justify=\"center\"\n              alignItems=\"stretch\"\n              direction=\"row\"\n            >\n              <form id=\"chocobo\" name=\"chocobo\" onSubmit={this.handleSubmit}>\n                <SingleInput\n                  inputType={'number'}\n                  title={'HP'}\n                  name={'hp'}\n                  placeholder={'2000'}\n                  required={true}\n                  ref=\"chocobo\"\n                  onChange={this.handleChange}\n                />\n                <SingleInput\n                  inputType={'number'}\n                  title={'Attack'}\n                  name={'attack'}\n                  placeholder={'1000'}\n                  required={true}\n                  ref=\"chocobo\"\n                  onChange={this.handleChange}\n                />\n                <Dropdown\n                  title={'Colour'}\n                  name={'colour'}\n                  options={['Red', 'Blue', 'Yellow', 'Black', 'Green']}\n                  selectedOption={this.state.colour}\n                  onChange={this.handleChange}\n                />\n                <Dropdown\n                  title={'Speed'}\n                  name={'speed'}\n                  options={['D', 'C', 'B', 'A', 'A+']}\n                  onChange={this.handleChange}\n                  selectedOption={this.state.speed}\n                />\n                <Grid item xs={4}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    onClick={this.handleSubmit}\n                  >\n                    Add\n                  </Button>\n                </Grid>\n                <Grid item xs={4}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    onClick={this.handleClose}\n                  >\n                    Cancel\n                  </Button>\n                </Grid>\n              </form>\n            </Grid>\n          </Dialog>\n        </Paper>\n      </Grid>\n    );\n  }\n}\n\nChocoboList.propTypes = {\n  header: PropTypes.array.isRequired,\n  items: PropTypes.array.isRequired,\n};\n\nexport default ChocoboList;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport ChocoboList from '../components/ChocoboList';\nimport { get, keys, set, del } from \"idb-keyval\";\n\nconst uuidv1 = require('uuid/v1');\n\nclass Stable extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {stable: []};\n  }\n\n  async getItems() {\n    let payload = [];\n    const Ids = await keys();\n    for (var i = 0; i < Ids.length; i++) {\n      payload.push({id: Ids[i], chocobo: await get(Ids[i])})\n    }\n    return {stable: payload};\n  }\n\n  async componentDidMount() {\n    this.setState(await this.getItems());\n  }\n\n  addNewItem = (hp, attack, colour, speed) => {\n    const payload = {\n      hp: hp,\n      attack: attack,\n      speed: speed,\n      colour: colour\n    };\n\n    let id = uuidv1();\n    let item = {id: id, chocobo: payload};\n    set(id, payload);\n\n    this.setState(prevState => {\n      prevState.stable.push(item);\n      return {stable: prevState.stable};\n    });\n  };\n\n  DeleteItem = (id) => {\n    del(id);\n\n    this.setState(prevState => {\n      prevState.stable = prevState.stable.filter(chocobo => chocobo.id !== id);\n      return {stable: prevState.stable};\n    });\n  };\n\n  render() {\n    const {stable} = this.state;\n\n    return (\n      <main>\n        <Grid\n          container\n          spacing={8}\n          direction=\"column\"\n          alignItems=\"stretch\"\n        >\n          <ChocoboList\n            items={stable}\n            DeleteItem={this.DeleteItem}\n            header={['HP', 'Attack', 'Speed', 'Colour', 'Value', 'Manage']}\n            addNewItem={this.addNewItem}\n          />\n        </Grid>\n      </main>\n    )\n  }\n}\n\nexport default Stable;\n","import training from '../data/training.json';\n\nexport const TrainingService = {\n    fetchAll\n};\n\nfunction fetchAll() {\n    return new Promise((resolve, reject) => resolve(training));\n}\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Grid from '@material-ui/core/Grid';\nimport ContentTable from '../components/ContentTable';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Stable from './Stable';\nimport {TrainingService} from '../services/TrainingService';\n\nfunction Training(props) {\n  return (\n    <Grid container spacing={8} alignItems=\"stretch\" justify=\"center\">\n      {props.children.map(train =>\n        <ContentTable\n          key={train.id}\n          title={train.title}\n          headers={train.headers}\n          contents={train.contents}\n        />\n      )}\n    </Grid>\n  );\n}\n\nclass Chocobos extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      value: 'stable',\n      training: []\n    };\n  }\n\n    async getItems() {\n      return {training: await TrainingService.fetchAll()};\n    }\n\n    async componentDidMount() {\n      this.setState(await this.getItems());\n    }\n\n  handleChange = (event, value) => {\n    this.setState({ value });\n  };\n\n  render() {\n    const {value, training} = this.state;\n\n    return (\n      <main>\n        <AppBar position=\"static\">\n          <Tabs value={value} onChange={this.handleChange} fullWidth>\n            <Tab value=\"stable\" label=\"Stable\" />\n            <Tab value=\"training\" label=\"Training\" />\n          </Tabs>\n        </AppBar>\n        {value === 'stable' && <Stable/>}\n        {value === 'training' && <Training>{training}</Training>}\n      </main>\n    );\n  }\n}\n\nexport default Chocobos;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\n\nconst MenuLink = props =>\n  <NavLink className=\"nav-link\" activeClassName=\"active\" to={props.link}>\n    <Button color=\"inherit\">{props.message}</Button>\n  </NavLink>;\n\nMenuLink.propTypes = {\n  link: PropTypes.string.isRequired,\n  message: PropTypes.string.isRequired\n};\n\nexport default MenuLink;\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Birthplaces from './pages/Birthplaces';\nimport Leaders from './pages/Leaders';\nimport Chocobos from './pages/Chocobos';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport AppBar from \"@material-ui/core/AppBar\";\nimport MenuLink from './components/MenuLink';\n\nconst App = () =>\n  <div id=\"main\">\n    <CssBaseline />\n    <AppBar position=\"static\" color=\"default\">\n      <Toolbar>\n        <Typography variant=\"title\" color=\"inherit\" noWrap>\n          MasterGlaive\n        </Typography>\n        <MenuLink link=\"/\" message=\"Birthplace status\" />\n        <MenuLink link=\"/leaders\" message=\"City leaders\" />\n        <MenuLink link=\"/chocobos\" message=\"Chocobos\" />\n      </Toolbar>\n    </AppBar>\n    <Route exact path=\"/\" component={Birthplaces}/>\n    <Route path=\"/leaders\" component={Leaders}/>\n    <Route path=\"/chocobos\" component={Chocobos}/>\n  </div>;\n\nexport default App;\n","const isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\n\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(\n  <BrowserRouter basename=\"/masterglaive\">\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\nregisterServiceWorker();\n"],"sourceRoot":""}