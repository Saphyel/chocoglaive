{"version":3,"sources":["components/Paragraph.js","components/AdvanceCard.js","pages/Birthplace.js","components/BasicCard.js","pages/Leaders.js","components/form/SingleInput.js","components/form/Dropdown.js","components/Title.js","components/ChocoboNew.js","components/ChocoboList.js","pages/Stable.js","components/ContentTable.js","pages/Training.js","components/Header.js","App.js","registerServiceWorker.js","index.js"],"names":["uuidv1","__webpack_require__","components_Paragraph","props","react_default","a","createElement","Typography_default","component","sentences","map","text","key","components_AdvanceCard","Grid_default","item","xs","sm","md","Card_default","CardHeader_default","title","subheader","subtitle","CardContent_default","color","headline","requirement","content","pages_Birthplace","container","spacing","alignItems","components_BasicCard","pages_Leaders","form_SingleInput","FormControl_default","InputLabel_default","htmlFor","name","Input_default","id","onChange","type","inputType","placeholder","value","required","inputProps","aria-label","form_Dropdown","margin","NativeSelect_default","defaultValue","selectedOption","options","opt","components_Title","Toolbar_default","variant","message","components_ChocoboNew","ChocoboNew","_this","_classCallCheck","this","_getPrototypeOf","call","state","hp","attack","colour","speed","handleChange","bind","_assertThisInitialized","handleSubmit","event","setState","target","preventDefault","addNewItem","Paper_default","className","onSubmit","Button_default","Component","components_ChocoboList","chocobo","parseInt","calcSpeed","Math","round","Table_default","TableHead_default","TableRow_default","header","TableCell_default","TableBody_default","items","calculator","onClick","DeleteItem","Stable_uuidv1","pages_Stable","Stable","Stable_classCallCheck","Stable_possibleConstructorReturn","Stable_getPrototypeOf","payload","Object","idb_keyval","prevState","stable","push","filter","Ids","i","length","getItems","components_ContentTable","description","head","index","scope","body","pages_Training","components_Header","AppBar_default","position","noWrap","NavLink","activeClassName","to","src_App","CssBaseline_default","Route","exact","path","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","react_dom_default","render","BrowserRouter","document","getElementById","URL","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.62406c64.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nconst uuidv1 = require('uuid/v1');\n\nconst Paragraph = props =>\n  <Typography component=\"p\">\n    {props.sentences.map(text =>\n      <span key={uuidv1()}>{text}<br/></span>\n    )}\n  </Typography>;\n\nParagraph.propTypes = {\n  sentences: PropTypes.array.isRequired\n};\n\nexport default Paragraph;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Paragraph from './Paragraph';\n\nconst AdvanceCard = props =>\n  <Grid item xs={12} sm={12} md={4}>\n    <Card>\n      <CardHeader title={props.title} subheader={props.subtitle}/>\n      <CardContent>\n        <Typography color=\"textSecondary\">\n          {props.headline}\n        </Typography>\n        {props.requirement ? (\n        <Typography color=\"secondary\">\n          Requires: {props.requirement}\n        </Typography> ) : null}\n        <Paragraph sentences={props.content} />\n      </CardContent>\n    </Card>\n  </Grid>;\n\nAdvanceCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  subtitle: PropTypes.string.isRequired,\n  headline: PropTypes.string.isRequired,\n  requirement: PropTypes.string,\n  content: PropTypes.array.isRequired\n};\n\nexport default AdvanceCard;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport AdvanceCard from '../components/AdvanceCard';\n\nconst Birthplace = () => (\n  <main>\n    <Grid container spacing={40} alignItems=\"flex-end\">\n      <AdvanceCard\n        title='Altissia'\n        subtitle='The attacking all-rounder birthplace'\n        headline='Birthplace of many resilient folks, blessed with high vitality, spirit and max HP.'\n        content={[\n          '504 HP',\n          '55 MP',\n          '22 STR',\n          '24 VIT',\n          '47 MAG',\n          '44 SPI'\n        ]}/>\n      <AdvanceCard\n        title='Galahd'\n        subtitle='The high magic all-rounder birthplace'\n        headline='Birthplace of many offensive specialists, blessed with high power and magic.'\n        content={[\n          '480 HP',\n          '55 MP',\n          '24 STR',\n          '22 VIT',\n          '53 MAG',\n          '40 SPI'\n        ]}/>\n      <AdvanceCard\n        title='Insomnia'\n        subtitle='The mage marvel birthplace'\n        headline='Birthplace of many spellcasting specialists, blessed with high magic and max MP.'\n        content={[\n          '432 HP',\n          '60 MP',\n          '19 STR',\n          '22 VIT',\n          '57 MAG',\n          '40 SPI'\n        ]}/>\n      <AdvanceCard\n        title='Lestallum'\n        subtitle='The tank birthplace'\n        headline='Birthplace of many all-out attackers, blessed with high power and max HP.'\n        content={[\n          '528 HP',\n          '49 MP',\n          '26 STR',\n          '22 VIT',\n          '38 MAG',\n          '40 SPI'\n        ]}/>\n      <AdvanceCard\n        title='Tenebrae'\n        subtitle='The magic specialist birthplace'\n        headline='Birthplace of many blessed with high magic, spirit, and max MP, but deficient in other areas.'\n        requirement='Rematch: The Pyreburner`s Trial'\n        content={[\n          '336 HP',\n          '63 MP',\n          '15 STR',\n          '15 VIT',\n          '55 MAG',\n          '52 SPI'\n        ]}/>\n      <AdvanceCard\n        title='Gralea'\n        subtitle='The offensive specialist birthplace'\n        headline='Birthplace of many blessed with high Power, Vitality, and max HP, but deficient in other areas.'\n        requirement='Final Round: The Bladekeeper`s Trial'\n        content={[\n          '600 HP',\n          '38 MP',\n          '30 STR',\n          '30 VIT',\n          '28 MAG',\n          '30 SPI'\n        ]}/>\n    </Grid>\n  </main>\n)\n\nexport default Birthplace;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Paragraph from './Paragraph';\n\nconst BasicCard = props =>\n  <Grid item xs={12} sm={12} md={4}>\n    <Card>\n      <CardHeader title={props.title}/>\n      <CardContent>\n        <Paragraph sentences={props.content} />\n      </CardContent>\n    </Card>\n  </Grid>;\n\nBasicCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  content: PropTypes.array.isRequired\n};\n\nexport default BasicCard;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport BasicCard from '../components/BasicCard';\n\nconst Leaders = () => (\n  <main>\n    <Grid container spacing={40} alignItems=\"flex-end\">\n    <BasicCard\n      title='Lestallum'\n      content={[\n        'Marcia Lythe – Treasure Donations',\n        'Finnegan Parton – Gil Donations',\n        'Torben Talum – 20% Munitions Discount'\n      ]}/>\n      <BasicCard\n        title='Old Lestallum'\n        content={[\n          'Ernie Sypert – Treasure Donations',\n          'Camilla Mescall – Gil Donations',\n          'Russel Springs – Meteorshard Donations'\n        ]}/>\n      <BasicCard\n        title='Old Lestallum 2'\n        content={[\n          'Elyria Ostis – Treasure Donations',\n          'Harper Flint – Meteorshard Donations',\n          'Matteo Marchesi – Gil Donations'\n        ]}/>\n      <BasicCard\n        title='Meldacio Hunter HQ'\n        content={[\n          'Devon Elkton – Trading Post Opening',\n          'Biggs Callux – Gil Donations',\n          'Wedge Kincaid – 20% Imperial Discount'\n        ]}/>\n      <BasicCard\n        title='Meldacio Hunter HQ 2'\n        content={[\n          'Todd Portabello – Treasure Donations',\n          'Olga Boore – Meteorshard Donations',\n          'Norris Dweller – 20% Munitions Discount'\n        ]}/>\n      <BasicCard\n        title='Norduscaen Garrison'\n        content={[\n          'Aiden Lunder – Item shop Opening',\n          'Killian West – Gil Discount'\n        ]}/>\n    </Grid>\n  </main>\n)\n\nexport default Leaders;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\n\nconst SingleInput = (props) =>\n  <FormControl>\n    <InputLabel htmlFor={props.name}>{props.title}</InputLabel>\n    <Input\n      id={props.name}\n      name={props.name}\n      onChange={props.onChange}\n      type={props.inputType}\n      placeholder={props.placeholder}\n      value={props.content}\n      required={props.required}\n      inputProps={{\n        'aria-label': 'Description',\n      }}\n    />\n  </FormControl>;\n\nSingleInput.propTypes = {\n  inputType: PropTypes.oneOf(['text', 'number']).isRequired,\n  title: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n  content: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ])\n};\n\nexport default SingleInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport NativeSelect from '@material-ui/core/NativeSelect';\n\nconst Dropdown = props =>\n  <FormControl margin=\"normal\" required>\n    <InputLabel htmlFor={props.name}>\n      {props.title}\n    </InputLabel>\n    <NativeSelect\n      name={props.name}\n      onChange={props.onChange}\n      defaultValue={props.selectedOption}>\n      {props.options.map(opt => {\n        return (\n          <option key={opt} value={opt}>{opt}</option>\n        );\n      })}\n    </NativeSelect>\n  </FormControl>;\n\nDropdown.propTypes = {\n  name: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  options: PropTypes.array.isRequired,\n  selectedOption: PropTypes.string\n};\n\nexport default Dropdown;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nconst Title = props =>\n  <Toolbar variant=\"dense\">\n    <Typography variant=\"title\">{props.message}</Typography>\n  </Toolbar>;\n\nTitle.propTypes = {\n  message: PropTypes.string.isRequired\n};\n\nexport default Title;\n","import React from 'react';\nimport SingleInput from './form/SingleInput';\nimport Dropdown from './form/Dropdown';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Title from './Title';\n\nclass ChocoboNew extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hp: '',\n      attack: '',\n      colour: 'Red',\n      speed: 'D'\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({[event.target.name]: event.target.value});\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.addNewItem(\n      this.state.hp,\n      this.state.attack,\n      this.state.colour,\n      this.state.speed,\n    );\n  }\n\n  render() {\n    return (\n      <Grid item xs={12} sm={12} md={12}>\n        <Paper>\n          <Title message=\"Add a new chocobo\"/>\n          <form className=\"new\" onSubmit={this.handleSubmit}>\n            <SingleInput\n              inputType={'number'}\n              title={'HP'}\n              name={'hp'}\n              placeholder={'2000'}\n              required={true}\n              onChange={this.handleChange}/>\n            <SingleInput\n              inputType={'number'}\n              title={'Attack'}\n              name={'attack'}\n              placeholder={'1000'}\n              required={true}\n              onChange={this.handleChange}/>\n            <Dropdown\n              title={'Colour'}\n              name={'colour'}\n              options={['Red', 'Blue', 'Yellow', 'Black', 'Green']}\n              selectedOption={this.state.colour}\n              onChange={this.handleChange}/>\n            <Dropdown\n              title={'Speed'}\n              name={'speed'}\n              options={['D', 'C', 'B', 'A', 'A+']}\n              onChange={this.handleChange}\n              selectedOption={this.state.speed}/>\n\n            <Button variant=\"raised\" color=\"primary\" type=\"submit\">\n              Add\n            </Button>\n          </form>\n        </Paper>\n      </Grid>\n    );\n  }\n}\n\nexport default ChocoboNew;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport Title from './Title';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableBody from '@material-ui/core/TableBody';\nimport Button from '@material-ui/core/Button';\n\nclass ChocoboList extends React.Component {\n\n  calcSpeed(value) {\n    if (value === 'C') {\n      return 110;\n    }\n    else if (value === 'B') {\n      return 120;\n    }\n    else if (value === 'A') {\n      return 130;\n    }\n    else if (value === 'A+') {\n      return 140;\n    }\n    return 100;\n  }\n\n  calculator(chocobo) {\n    const hp = parseInt(chocobo.hp);\n    const attack = parseInt(chocobo.attack);\n    const speed = this.calcSpeed(chocobo.speed)\n    return Math.round((hp / 20) + (attack / 10) + speed);\n  }\n\n  render() {\n    return (\n      <Grid item xs={12} sm={12} md={12}>\n        <Paper>\n          <Title message=\"Stable of Chocobos\"/>\n          <Table>\n            <TableHead>\n              <TableRow>\n              {this.props.header.map(header => {\n                return (\n                  <TableCell key={header}>{header}</TableCell>\n                );\n              })}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {this.props.items.map(opt => {\n                return (\n                  <TableRow key={opt.id}>\n                    <TableCell>{opt.chocobo.hp}</TableCell>\n                    <TableCell>{opt.chocobo.attack}</TableCell>\n                    <TableCell>{opt.chocobo.speed}</TableCell>\n                    <TableCell>{opt.chocobo.colour}</TableCell>\n                    <TableCell>{this.calculator(opt.chocobo)}</TableCell>\n                    <TableCell>\n                      <Button\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        onClick={() => this.props.DeleteItem(opt.id)}\n                      >\n                        Delete\n                      </Button>\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </Paper>\n      </Grid>\n    );\n  }\n}\n\nChocoboList.propTypes = {\n  header: PropTypes.array.isRequired,\n  items: PropTypes.array.isRequired,\n};\n\nexport default ChocoboList;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport ChocoboNew from '../components/ChocoboNew';\nimport ChocoboList from '../components/ChocoboList';\nimport { get, keys, set, del } from \"idb-keyval\";\n\nconst uuidv1 = require('uuid/v1');\n\nclass Stable extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {stable: []};\n  }\n\n  async getItems() {\n    let payload = [];\n    const Ids = await keys();\n    for (var i = 0; i < Ids.length; i++) {\n      payload.push({id: Ids[i], chocobo: await get(Ids[i])})\n    }\n    return {stable: payload};\n  }\n\n  async componentDidMount() {\n    this.setState(await this.getItems());\n  }\n\n  addNewItem = (hp, attack, colour, speed) => {\n    const payload = {\n      hp: hp,\n      attack: attack,\n      speed: speed,\n      colour: colour\n    };\n\n    let id = uuidv1();\n    let item = {id: id, chocobo: payload};\n    set(id, payload);\n\n    this.setState(prevState => {\n      prevState.stable.push(item);\n      return {stable: prevState.stable};\n    });\n  };\n\n  DeleteItem = (id) => {\n    del(id);\n\n    this.setState(prevState => {\n      prevState.stable = prevState.stable.filter(chocobo => chocobo.id !== id);\n      return {stable: prevState.stable};\n    });\n  };\n\n  render() {\n    return (\n      <main>\n        <Grid container spacing={40} alignItems=\"flex-end\">\n          <ChocoboList\n            items={this.state.stable}\n            DeleteItem={this.DeleteItem}\n            header={['HP', 'Attack', 'Speed', 'Colour', 'Value', 'Manage']}\n          />\n          <ChocoboNew addNewItem={this.addNewItem}/>\n        </Grid>\n      </main>\n    )\n  }\n}\n\nexport default Stable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Title from './Title';\n\nconst ContentTable = (props) =>\n  <Grid item xs={12} sm={12} md={12}>\n    <Paper>\n      <Title message={props.description} />\n      <Table>\n        <TableBody>\n          {props.head.map((value, index) => {\n            return (\n              <TableRow key={value}>\n                <TableCell component=\"th\" scope=\"row\">{value}</TableCell>\n                <TableCell>{props.body[index]}</TableCell>\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n    </Paper>\n  </Grid>;\n\nContentTable.propTypes = {\n  description: PropTypes.string.isRequired,\n  head: PropTypes.array.isRequired,\n  body: PropTypes.array.isRequired,\n};\n\nexport default ContentTable;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport ContentTable from '../components/ContentTable';\n\nconst Training = () =>\n  <main>\n    <Grid container spacing={40} alignItems=\"flex-end\">\n      <ContentTable\n        description=\"Max level\"\n        head={[\"lvl 99\",\"lvl 80\",\"lvl 50\",\"lvl 30\",\"lvl 20\"]}\n        body={[\n          \"This bird roosts at the top of the pecking order!\",\n          \"This bird's plumage exudes an air of prestige.\",\n          \"This bird's feathers have a certain sheen about them.\",\n          \"This bird is middle-of-the-flock in all regards.\",\n          \"This bird does not stand out from the flock.\"\n        ]} />\n        <ContentTable\n          description=\"Bonus for training attributes\"\n          head={[\"Any\",\"stamina\",\"fighter\",\"speed\",\"nothing\"]}\n          body={[\n            \"It appears to possess incredible attributes.\",\n            \"Its sturdy musculature should make it more resillient.\",\n            \"It looks ready and raring for a good fight.\",\n            \"Its quick reflex should help it sprint to and fro. OR Its powerful wings should allow it to stay aloft longer.\",\n            \"It seems to possess no notable attributes.\"\n          ]} />\n    </Grid>\n  </main>;\n\nexport default Training;\n","import React from 'react';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport AppBar from \"@material-ui/core/AppBar\";\nimport { NavLink } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\n\nconst Header = () =>\n  <AppBar position=\"static\" color=\"default\">\n    <Toolbar>\n      <Typography variant=\"title\" color=\"inherit\" noWrap>\n        MasterGlaive\n      </Typography>\n      <NavLink className=\"nav-link\" activeClassName=\"active\" to=\"/masterglaive/\">\n        <Button color=\"inherit\">\n          Birthplace status\n        </Button>\n      </NavLink>\n      <NavLink className=\"nav-link\" activeClassName=\"active\" to=\"/masterglaive/leaders\">\n        <Button color=\"inherit\">\n          City leaders\n        </Button>\n      </NavLink>\n      <NavLink className=\"nav-link\" activeClassName=\"active\" to=\"/masterglaive/stable\">\n        <Button color=\"inherit\">\n          Stable\n        </Button>\n      </NavLink>\n      <NavLink className=\"nav-link\" activeClassName=\"active\" to=\"/masterglaive/training\">\n        <Button color=\"inherit\">\n          Training\n        </Button>\n      </NavLink>\n    </Toolbar>\n  </AppBar>\n\nexport default Header;\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Birthplace from './pages/Birthplace';\nimport Leaders from './pages/Leaders';\nimport Stable from './pages/Stable';\nimport Training from './pages/Training';\nimport Header from \"./components/Header\";\n\nconst App = () =>\n  <div id=\"main\">\n    <CssBaseline />\n\n    <Header/>\n\n    <Route exact path=\"/masterglaive/\" component={Birthplace}/>\n    <Route exact path=\"/masterglaive/leaders\" component={Leaders}/>\n    <Route exact path=\"/masterglaive/stable\" component={Stable}/>\n    <Route exact path=\"/masterglaive/training\" component={Training}/>\n  </div>;\n\nexport default App;\n","const isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\n\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\nregisterServiceWorker();\n"],"sourceRoot":""}